@model RTI.ModelingSystem.Web.Models.ResinModel

@*<div id="totdata">*@
    <div class="modal fade" role="dialog" aria-labelledby="gridSystemModalLabel" id="resinLookupModal" data-backdrop="static">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="gridSystemModalLabel">Resin lookup</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xs-12 textfilter">
                            @*@Html.TextBoxFor(m => m.BedInfo, new { @id = "bedInfo", @hidden = "hidden" })*@
                            <ul id="ProductNamesUL">
                                <li class="title">Filter by product name:</li>
                                <li><a class="active" href="#">All</a></li>
                                @foreach (var item in Model.ProductNamesList)
                                {
                                    <li><a href="#">@item.ToString()</a></li>
                                }

                            </ul>
                        </div>
                    </div>
                    <div class="row resinfilter">
                        <div class="col-xs-6">
                            <div class="searchresult">
                                @Html.Label(Model.ResinProductsList.Count.ToString()) total
                            </div>
                            @*<div>
                                        @Html.Label(Model.BedInfo.ToString())
                                    <input type="hidden" id="TutorName" name="TutorName" value="@Model.BedInfo" />

                                    <input type="hidden" value="@Model.BedInfo" id="ApplicationNumber" />
                                </div>*@
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search" name="q">
                                <div class="input-group-btn">
                                    <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            @if (Model.ResinProductsList.Count == 0)
                            {
                                <div class="noproducts">No products available</div>
                            }
                            else
                            {
                                @*<div class="noproducts" style="display:none;">No products available</div>*@
                                <div class="resinfilter_result">

                                    <ul id="idUL">
                                        <!-- product model list Start-->
                                        @foreach (var item in Model.ResinProductsList)
                                        {
                                            <li id="idLI">

                                                @Html.TextBoxFor(modelItem => item.color, new { @id = "hdnBedType", @hidden = "hidden" })
                                                <div class="row">
                                                    <div class="col-xs-8 resinSelect">
                                                        <div class="pmodel_name"><a href="#">@Html.DisplayFor(modelItem => item.model_number) (@Html.DisplayFor(modelItem => item.physical_structure))</a> </div>
                                                        <div class="pmodel_type">@Html.DisplayFor(modelItem => item.teir) </div>

                                                    </div>
                                                    <div class="col-xs-3 text-right nopad_l-r">
                                                        <div class="pmodel_price"><span>@Html.DisplayFor(modelItem => item.price_per_cuft)</span></div>
                                                        <div class="totalcap">Total Cap: </div>
                                                    </div>
                                                    <div class="col-xs-1 text-left">
                                                        <div class="pmodel_comment"><a data-container="body" data-placement="bottom" data-toggle="popover" data-trigger="focus" data-content="@item.comments" href="#"></a></div>
                                                        <div class="totalcap_value"><span>@Html.DisplayFor(modelItem => item.total_capacity)</span></div>
                                                    </div>
                                                </div>
                                            </li>
                                        }
                                        <!-- product model list End -->
                                    </ul>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @*</div>*@

    <script type="text/javascript">

        $(function () {
            $('[data-toggle="popover"]').popover()
        })

        $(document).ready(function () {

            $("#idUL > li .resinSelect").click(function () {
                //alert($(this).html());
                //alert($(this).find("div.pmodel_name").text());
                //alert($(this).find("div.pmodel_type").text());
                //debugger;
                //var selectedResinModel = $(this).find("div.pmodel_name").text() + '$' + $(this).find("div.pmodel_type").text()

                var txtResin = $(this).find("div.pmodel_name").text();
                var txtResin1 = txtResin.split('(');
                var txtResin2 = txtResin1[0];

                if (txtResin2 != null && txtResin2.length > 0) {
                    //alert($("#hdnBedType").val())

                    if ($("#hdnBedType").val() != null && $("#hdnBedType").val() == "CatBed1") {
                        $('#txtResinProductModelCatBed1')[0].value = txtResin2;
                        $("#ResinModel0").val(txtResin2);
                    }
                    else if ($("#hdnBedType").val() != null && $("#hdnBedType").val() == "CatBed2") {
                        $('#txtResinProductModelCatBed2')[0].value = txtResin2;
                        $("#ResinModel2").val(txtResin2);
                    }
                    else if ($("#hdnBedType").val() != null && $("#hdnBedType").val() == "AnionBed1") {
                        $('#txtResinProductModelCatBed11')[0].value = txtResin2;
                        $("#ResinModel11").val(txtResin2);
                    }
                    else if ($("#hdnBedType").val() != null && $("#hdnBedType").val() == "AnionBed2") {
                        $('#txtResinProductModelCatBed3')[0].value = txtResin2;
                        $("#ResinModel3").val(txtResin2);
                    }

                }

                var displaySpan = $(this).find("div.pmodel_type").text();
                var displaySpan1 = displaySpan.split('(');
                var displaySpan2 = displaySpan1[0];
                var displaySpan3 = null;

                if (displaySpan2 != null && displaySpan2.length > 0) {
                    displaySpan3 = displaySpan2 + '(' + txtResin2 + ')'
                }

                if (displaySpan3 != null && displaySpan3.length > 0) {

                    if (txtResin2 != null && txtResin2.length > 0) {
                        //alert($("#hdnBedType").val())

                        if ($("#hdnBedType").val() != null && $("#hdnBedType").val() == "CatBed1") {
                            $("#ResignDetailsCatBed1").html(displaySpan3);
                            $('#ResignDetailsCatBed1').show();
                        }
                        else if ($("#hdnBedType").val() != null && $("#hdnBedType").val() == "CatBed2") {
                            $("#ResignDetailsCatBed2").html(displaySpan3);
                            $('#ResignDetailsCatBed2').show();
                        }
                        else if ($("#hdnBedType").val() != null && $("#hdnBedType").val() == "AnionBed1") {
                            $("#ResignDetailsCatBed11").html(displaySpan3);
                            $('#ResignDetailsCatBed11').show();
                        }
                        else if ($("#hdnBedType").val() != null && $("#hdnBedType").val() == "AnionBed2") {
                            $("#ResignDetailsCatBed3").html(displaySpan3);
                            $('#ResignDetailsCatBed3').show();

                            // $('#txtResinProductModelCatBed3')[0].value = txtResin2;
                        }

                    }


                }

                // alert(selectedResinModel);

                $("#resinLookupModal").modal('hide');
            });


        });

        $("#ProductNamesUL > li").click(function () {
            // debugger;
            //alert($(this)[0].innerText)

            var prod_name = $(this)[0].innerText;

            $.ajax({
                type: "POST",
                url: '/ClientDatabase/GetAllResinProductDetailsByProductName',
                data: { id: prod_name },

                success: function (data) {
                   // alert('succ')
                    if (data != null) {
                        $("#noproducts").hide();
                        $("#resinLookup").empty();
                        $("#resinLookup").html(data);
                        $("#resinLookupModal").modal('show');
                    }
                    else {
                        $("#noproducts").show();
                        $("#resinfilter_result").hide();
                    }
                    //alert(data);

                    //return true;
                    return true;

                },
                error: function (xhr) {
                    alert('Error: ' + xhr.statusText);
                }

            });
        });



    </script>
